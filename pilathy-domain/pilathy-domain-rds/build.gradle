plugins {
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

dependencies {
    api project(":pilathy-common")

    // Spring Data JPA
    api("org.springframework.boot:spring-boot-starter-data-jpa")

    // H2
    implementation("com.h2database:h2")

    // MariaDB
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")

    // Querydsl
    implementation("com.querydsl:querydsl-jpa")
    implementation("com.querydsl:querydsl-apt")
//    implementation("com.querydsl:querydsl-core")
//    annotationProcessor("com.querydsl:querydsl-apt:${querydslVersion}:jpa")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // Flyway
//    implementation("org.flywaydb:flyway-core")

    // TestFixtures
    testImplementation(testFixtures(project(":pilathy-domain:pilathy-domain-rds")))
    testImplementation(testFixtures(project(":pilathy-common")))
    testFixturesImplementation(testFixtures(project(":pilathy-common")))
}

def querydslDir = 'src/main/generated/querydsl'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//
//tasks.withType(JavaCompile) {
//    options.generatedSourceOutputDirectory = file(queryDslDir)
//}
//
//clean.doLast {
//    file(queryDslDir).deleteDir()
//}

bootJar {
    enabled = false
}
jar {
    enabled = true
}
